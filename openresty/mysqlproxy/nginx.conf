worker_processes  1;
daemon off;
master_process off;

error_log logs/error.log info;

events {
    worker_connections 1024;
}

http {

    # https://launchpad.net/drizzle

    # sudo yum install libdrizzle-devel libdrizzle-doc
    # ./configure --prefix=/data/Lua/openresty --with-luajit --with-http_drizzle_module

    # sudo apt-get install libdrizzle-dev libdrizzle-doc
    # export LIBDRIZZLE_INC=/usr/include/libdrizzle-1.0
    # export LIBDRIZZLE_LIB=/usr/lib
    # ./configure --prefix=/opt/openresty --with-luajit --with-http_stub_status_module --with-http_drizzle_module
    
    upstream backend {
        drizzle_server 127.0.0.1:3306 dbname=mysql password=mysql user=root protocol=mysql;
        drizzle_keepalive max=100 overflow=reject;
    }

    server {
        listen 8080;

        location = /mysql {
            set $my_sql 'select user,host from user';
            drizzle_query $my_sql;

            drizzle_pass backend;

            drizzle_connect_timeout    500ms; # default 60s
            drizzle_send_query_timeout 2s;    # default 60s
            drizzle_recv_cols_timeout  1s;    # default 60s
            drizzle_recv_rows_timeout  1s;    # default 60s  

            rds_json on;      
        }

        location = /mysql-rds {
            set $my_sql 'select user,host from user';
            drizzle_query $my_sql;

            drizzle_pass backend;

            drizzle_connect_timeout    500ms; # default 60s
            drizzle_send_query_timeout 2s;    # default 60s
            drizzle_recv_cols_timeout  1s;    # default 60s
            drizzle_recv_rows_timeout  1s;    # default 60s   
        }

        location /stats {
            allow 127.0.0.1;
            deny all;

            drizzle_status;
        }  

        location = /api {
            content_by_lua '
                local parser = require "rds.parser"
                local cjson = require "cjson"
                local res = ngx.location.capture("/mysql-rds")
                local data, err = parser.parse(res.body)
                ngx.print(cjson.encode(data.resultset))
            ';
        }
    }
}
