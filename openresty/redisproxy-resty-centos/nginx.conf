# only one worker per container (docker)
worker_processes  1;
daemon off;

# get services from environment
env APP_DIR;
env REDIS_SERVICE_HOST;
env REDIS_SERVICE_PORT;

# logs to console (docker)
error_log /dev/stderr info;

# nginx events tuning
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # access log JSON format (docker)
    log_format le_json '{ "time": "$time_iso8601", '
     '"remote_addr": "$remote_addr", '
     '"remote_user": "$remote_user", '
     '"body_bytes_sent": "$body_bytes_sent", '
     '"request_time": "$request_time", '
     '"status": "$status", '
     '"request": "$request", '
     '"request_method": "$request_method", '
     '"http_referrer": "$http_referer", '
     '"http_user_agent": "$http_user_agent" }';

    access_log /dev/stderr le_json;

    # set local resolver (docker)
    resolver 127.0.1.1;
    resolver_timeout 5s;

    # lua code cache disable (must be enable in production)
    lua_code_cache off;

    # local route cache
    lua_shared_dict routes 1m;

    server {
        listen 8080;

        location / {
            set_by_lua $prefix  'return os.getenv("APP_DIR")';
            set $default        "default";
            set $target         "";
            set $throttle       5;
            access_by_lua_file  "$prefix/proxy.lua";
            proxy_http_version  1.1;
            proxy_set_header    Host $target;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto http;
            proxy_pass          http://$target;
        }
    }

    #######################################
    #          TEST ENVIRONMENT           #
    #######################################

    server {
        listen 127.0.0.1:8000;

        location / {
            set_by_lua $prefix  'return os.getenv("APP_DIR")';
            set $server          "default-server";
            content_by_lua_file  "$prefix/dump.lua";
        }
    }

    server {
        listen 127.0.0.1:8001;

        location / {
            set_by_lua $prefix  'return os.getenv("APP_DIR")';
            set $server          "server-01";
            content_by_lua_file  "$prefix/dump.lua";
        }
    }

    server {
        listen 127.0.0.1:8002;

        location / {
            set_by_lua $prefix  'return os.getenv("APP_DIR")';
            set $server          "server-02";
            content_by_lua_file  "$prefix/dump.lua";
        }
    }
}
